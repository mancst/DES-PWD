// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: top_proto.proto

#ifndef PROTOBUF_top_5fproto_2eproto__INCLUDED
#define PROTOBUF_top_5fproto_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "comm.pb.h"
#ifdef _WEB_LOGIC
#include "CharSetUtil.hpp"
#endif
// @@protoc_insertion_point(includes)

namespace top {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_top_5fproto_2eproto();
void protobuf_AssignDesc_top_5fproto_2eproto();
void protobuf_ShutdownFile_top_5fproto_2eproto();

class SlogLogInfo;
class SlogClientPkgBody;
class SlogGetAppLogSizeReq;
class AppLogSizeInfo;
class SlogGetAppLogSizeRsp;
class SlogRemoveAppLogFile;

// ===================================================================

class SlogLogInfo : public ::google::protobuf::Message {
 public:
  SlogLogInfo();
  virtual ~SlogLogInfo();
  
  SlogLogInfo(const SlogLogInfo& from);
  
  inline SlogLogInfo& operator=(const SlogLogInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SlogLogInfo& default_instance();
  
  void Swap(SlogLogInfo* other);
  
  // implements Message ----------------------------------------------
  
  SlogLogInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SlogLogInfo& from);
  void MergeFrom(const SlogLogInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required uint32 uint32_app_id = 1;
  inline bool has_uint32_app_id() const;
  inline void clear_uint32_app_id();
  static const int kUint32AppIdFieldNumber = 1;
  inline ::google::protobuf::uint32 uint32_app_id() const;
  inline void set_uint32_app_id(::google::protobuf::uint32 value);
  
  // required uint32 uint32_module_id = 2;
  inline bool has_uint32_module_id() const;
  inline void clear_uint32_module_id();
  static const int kUint32ModuleIdFieldNumber = 2;
  inline ::google::protobuf::uint32 uint32_module_id() const;
  inline void set_uint32_module_id(::google::protobuf::uint32 value);
  
  // optional uint64 uint64_log_time = 3;
  inline bool has_uint64_log_time() const;
  inline void clear_uint64_log_time();
  static const int kUint64LogTimeFieldNumber = 3;
  inline ::google::protobuf::uint64 uint64_log_time() const;
  inline void set_uint64_log_time(::google::protobuf::uint64 value);
  
  // optional uint32 uint32_log_seq = 4;
  inline bool has_uint32_log_seq() const;
  inline void clear_uint32_log_seq();
  static const int kUint32LogSeqFieldNumber = 4;
  inline ::google::protobuf::uint32 uint32_log_seq() const;
  inline void set_uint32_log_seq(::google::protobuf::uint32 value);
  
  // required uint32 uint32_log_type = 5;
  inline bool has_uint32_log_type() const;
  inline void clear_uint32_log_type();
  static const int kUint32LogTypeFieldNumber = 5;
  inline ::google::protobuf::uint32 uint32_log_type() const;
  inline void set_uint32_log_type(::google::protobuf::uint32 value);
  
  // required bytes bytes_log = 6;
  inline bool has_bytes_log() const;
  inline void clear_bytes_log();
  static const int kBytesLogFieldNumber = 6;
  inline const ::std::string& bytes_log() const;
  inline void set_bytes_log(const ::std::string& value);
  inline void set_bytes_log(const char* value);
  inline void set_bytes_log(const void* value, size_t size);
  inline ::std::string* mutable_bytes_log();
  
  // optional uint32 uint32_log_config_id = 7;
  inline bool has_uint32_log_config_id() const;
  inline void clear_uint32_log_config_id();
  static const int kUint32LogConfigIdFieldNumber = 7;
  inline ::google::protobuf::uint32 uint32_log_config_id() const;
  inline void set_uint32_log_config_id(::google::protobuf::uint32 value);
  
  // optional uint32 uint32_log_host = 8;
  inline bool has_uint32_log_host() const;
  inline void clear_uint32_log_host();
  static const int kUint32LogHostFieldNumber = 8;
  inline ::google::protobuf::uint32 uint32_log_host() const;
  inline void set_uint32_log_host(::google::protobuf::uint32 value);
  
  // optional uint32 uint32_cust_1 = 9;
  inline bool has_uint32_cust_1() const;
  inline void clear_uint32_cust_1();
  static const int kUint32Cust1FieldNumber = 9;
  inline ::google::protobuf::uint32 uint32_cust_1() const;
  inline void set_uint32_cust_1(::google::protobuf::uint32 value);
  
  // optional uint32 uint32_cust_2 = 10;
  inline bool has_uint32_cust_2() const;
  inline void clear_uint32_cust_2();
  static const int kUint32Cust2FieldNumber = 10;
  inline ::google::protobuf::uint32 uint32_cust_2() const;
  inline void set_uint32_cust_2(::google::protobuf::uint32 value);
  
  // optional int32 int32_cust_3 = 11;
  inline bool has_int32_cust_3() const;
  inline void clear_int32_cust_3();
  static const int kInt32Cust3FieldNumber = 11;
  inline ::google::protobuf::int32 int32_cust_3() const;
  inline void set_int32_cust_3(::google::protobuf::int32 value);
  
  // optional int32 int32_cust_4 = 12;
  inline bool has_int32_cust_4() const;
  inline void clear_int32_cust_4();
  static const int kInt32Cust4FieldNumber = 12;
  inline ::google::protobuf::int32 int32_cust_4() const;
  inline void set_int32_cust_4(::google::protobuf::int32 value);
  
  // optional bytes bytes_cust_5 = 13;
  inline bool has_bytes_cust_5() const;
  inline void clear_bytes_cust_5();
  static const int kBytesCust5FieldNumber = 13;
  inline const ::std::string& bytes_cust_5() const;
  inline void set_bytes_cust_5(const ::std::string& value);
  inline void set_bytes_cust_5(const char* value);
  inline void set_bytes_cust_5(const void* value, size_t size);
  inline ::std::string* mutable_bytes_cust_5();
  
  // optional bytes bytes_cust_6 = 14;
  inline bool has_bytes_cust_6() const;
  inline void clear_bytes_cust_6();
  static const int kBytesCust6FieldNumber = 14;
  inline const ::std::string& bytes_cust_6() const;
  inline void set_bytes_cust_6(const ::std::string& value);
  inline void set_bytes_cust_6(const char* value);
  inline void set_bytes_cust_6(const void* value, size_t size);
  inline ::std::string* mutable_bytes_cust_6();
  
  // optional uint32 cust_flag = 15;
  inline bool has_cust_flag() const;
  inline void clear_cust_flag();
  static const int kCustFlagFieldNumber = 15;
  inline ::google::protobuf::uint32 cust_flag() const;
  inline void set_cust_flag(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:top.SlogLogInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 uint32_app_id_;
  ::google::protobuf::uint32 uint32_module_id_;
  ::google::protobuf::uint64 uint64_log_time_;
  ::google::protobuf::uint32 uint32_log_seq_;
  ::google::protobuf::uint32 uint32_log_type_;
  ::std::string* bytes_log_;
  static const ::std::string _default_bytes_log_;
  ::google::protobuf::uint32 uint32_log_config_id_;
  ::google::protobuf::uint32 uint32_log_host_;
  ::google::protobuf::uint32 uint32_cust_1_;
  ::google::protobuf::uint32 uint32_cust_2_;
  ::google::protobuf::int32 int32_cust_3_;
  ::google::protobuf::int32 int32_cust_4_;
  ::std::string* bytes_cust_5_;
  static const ::std::string _default_bytes_cust_5_;
  ::std::string* bytes_cust_6_;
  static const ::std::string _default_bytes_cust_6_;
  ::google::protobuf::uint32 cust_flag_;
  friend void  protobuf_AddDesc_top_5fproto_2eproto();
  friend void protobuf_AssignDesc_top_5fproto_2eproto();
  friend void protobuf_ShutdownFile_top_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SlogLogInfo* default_instance_;
};
// -------------------------------------------------------------------

class SlogClientPkgBody : public ::google::protobuf::Message {
 public:
  SlogClientPkgBody();
  virtual ~SlogClientPkgBody();
  
  SlogClientPkgBody(const SlogClientPkgBody& from);
  
  inline SlogClientPkgBody& operator=(const SlogClientPkgBody& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SlogClientPkgBody& default_instance();
  
  void Swap(SlogClientPkgBody* other);
  
  // implements Message ----------------------------------------------
  
  SlogClientPkgBody* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SlogClientPkgBody& from);
  void MergeFrom(const SlogClientPkgBody& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .top.SlogLogInfo log = 1;
  inline int log_size() const;
  inline void clear_log();
  static const int kLogFieldNumber = 1;
  inline const ::top::SlogLogInfo& log(int index) const;
  inline ::top::SlogLogInfo* mutable_log(int index);
  inline ::top::SlogLogInfo* add_log();
  inline const ::google::protobuf::RepeatedPtrField< ::top::SlogLogInfo >&
      log() const;
  inline ::google::protobuf::RepeatedPtrField< ::top::SlogLogInfo >*
      mutable_log();
  
  // optional uint32 uint32_app_id = 2;
  inline bool has_uint32_app_id() const;
  inline void clear_uint32_app_id();
  static const int kUint32AppIdFieldNumber = 2;
  inline ::google::protobuf::uint32 uint32_app_id() const;
  inline void set_uint32_app_id(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:top.SlogClientPkgBody)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedPtrField< ::top::SlogLogInfo > log_;
  ::google::protobuf::uint32 uint32_app_id_;
  friend void  protobuf_AddDesc_top_5fproto_2eproto();
  friend void protobuf_AssignDesc_top_5fproto_2eproto();
  friend void protobuf_ShutdownFile_top_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SlogClientPkgBody* default_instance_;
};
// -------------------------------------------------------------------

class SlogGetAppLogSizeReq : public ::google::protobuf::Message {
 public:
  SlogGetAppLogSizeReq();
  virtual ~SlogGetAppLogSizeReq();
  
  SlogGetAppLogSizeReq(const SlogGetAppLogSizeReq& from);
  
  inline SlogGetAppLogSizeReq& operator=(const SlogGetAppLogSizeReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SlogGetAppLogSizeReq& default_instance();
  
  void Swap(SlogGetAppLogSizeReq* other);
  
  // implements Message ----------------------------------------------
  
  SlogGetAppLogSizeReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SlogGetAppLogSizeReq& from);
  void MergeFrom(const SlogGetAppLogSizeReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated int32 appid_list = 2;
  inline int appid_list_size() const;
  inline void clear_appid_list();
  static const int kAppidListFieldNumber = 2;
  inline ::google::protobuf::int32 appid_list(int index) const;
  inline void set_appid_list(int index, ::google::protobuf::int32 value);
  inline void add_appid_list(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      appid_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_appid_list();
  
  // @@protoc_insertion_point(class_scope:top.SlogGetAppLogSizeReq)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > appid_list_;
  friend void  protobuf_AddDesc_top_5fproto_2eproto();
  friend void protobuf_AssignDesc_top_5fproto_2eproto();
  friend void protobuf_ShutdownFile_top_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SlogGetAppLogSizeReq* default_instance_;
};
// -------------------------------------------------------------------

class AppLogSizeInfo : public ::google::protobuf::Message {
 public:
  AppLogSizeInfo();
  virtual ~AppLogSizeInfo();
  
  AppLogSizeInfo(const AppLogSizeInfo& from);
  
  inline AppLogSizeInfo& operator=(const AppLogSizeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AppLogSizeInfo& default_instance();
  
  void Swap(AppLogSizeInfo* other);
  
  // implements Message ----------------------------------------------
  
  AppLogSizeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AppLogSizeInfo& from);
  void MergeFrom(const AppLogSizeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 appid = 1;
  inline bool has_appid() const;
  inline void clear_appid();
  static const int kAppidFieldNumber = 1;
  inline ::google::protobuf::int32 appid() const;
  inline void set_appid(::google::protobuf::int32 value);
  
  // optional uint64 log_size = 2;
  inline bool has_log_size() const;
  inline void clear_log_size();
  static const int kLogSizeFieldNumber = 2;
  inline ::google::protobuf::uint64 log_size() const;
  inline void set_log_size(::google::protobuf::uint64 value);
  
  // optional uint32 oldest_log_file_time = 3;
  inline bool has_oldest_log_file_time() const;
  inline void clear_oldest_log_file_time();
  static const int kOldestLogFileTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 oldest_log_file_time() const;
  inline void set_oldest_log_file_time(::google::protobuf::uint32 value);
  
  // optional uint32 debug_logs_count = 4;
  inline bool has_debug_logs_count() const;
  inline void clear_debug_logs_count();
  static const int kDebugLogsCountFieldNumber = 4;
  inline ::google::protobuf::uint32 debug_logs_count() const;
  inline void set_debug_logs_count(::google::protobuf::uint32 value);
  
  // optional uint32 info_logs_count = 5;
  inline bool has_info_logs_count() const;
  inline void clear_info_logs_count();
  static const int kInfoLogsCountFieldNumber = 5;
  inline ::google::protobuf::uint32 info_logs_count() const;
  inline void set_info_logs_count(::google::protobuf::uint32 value);
  
  // optional uint32 warn_logs_count = 6;
  inline bool has_warn_logs_count() const;
  inline void clear_warn_logs_count();
  static const int kWarnLogsCountFieldNumber = 6;
  inline ::google::protobuf::uint32 warn_logs_count() const;
  inline void set_warn_logs_count(::google::protobuf::uint32 value);
  
  // optional uint32 reqerr_logs_count = 7;
  inline bool has_reqerr_logs_count() const;
  inline void clear_reqerr_logs_count();
  static const int kReqerrLogsCountFieldNumber = 7;
  inline ::google::protobuf::uint32 reqerr_logs_count() const;
  inline void set_reqerr_logs_count(::google::protobuf::uint32 value);
  
  // optional uint32 error_logs_count = 8;
  inline bool has_error_logs_count() const;
  inline void clear_error_logs_count();
  static const int kErrorLogsCountFieldNumber = 8;
  inline ::google::protobuf::uint32 error_logs_count() const;
  inline void set_error_logs_count(::google::protobuf::uint32 value);
  
  // optional uint32 fatal_logs_count = 9;
  inline bool has_fatal_logs_count() const;
  inline void clear_fatal_logs_count();
  static const int kFatalLogsCountFieldNumber = 9;
  inline ::google::protobuf::uint32 fatal_logs_count() const;
  inline void set_fatal_logs_count(::google::protobuf::uint32 value);
  
  // optional uint32 other_logs_count = 10;
  inline bool has_other_logs_count() const;
  inline void clear_other_logs_count();
  static const int kOtherLogsCountFieldNumber = 10;
  inline ::google::protobuf::uint32 other_logs_count() const;
  inline void set_other_logs_count(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:top.AppLogSizeInfo)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::int32 appid_;
  ::google::protobuf::uint64 log_size_;
  ::google::protobuf::uint32 oldest_log_file_time_;
  ::google::protobuf::uint32 debug_logs_count_;
  ::google::protobuf::uint32 info_logs_count_;
  ::google::protobuf::uint32 warn_logs_count_;
  ::google::protobuf::uint32 reqerr_logs_count_;
  ::google::protobuf::uint32 error_logs_count_;
  ::google::protobuf::uint32 fatal_logs_count_;
  ::google::protobuf::uint32 other_logs_count_;
  friend void  protobuf_AddDesc_top_5fproto_2eproto();
  friend void protobuf_AssignDesc_top_5fproto_2eproto();
  friend void protobuf_ShutdownFile_top_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static AppLogSizeInfo* default_instance_;
};
// -------------------------------------------------------------------

class SlogGetAppLogSizeRsp : public ::google::protobuf::Message {
 public:
  SlogGetAppLogSizeRsp();
  virtual ~SlogGetAppLogSizeRsp();
  
  SlogGetAppLogSizeRsp(const SlogGetAppLogSizeRsp& from);
  
  inline SlogGetAppLogSizeRsp& operator=(const SlogGetAppLogSizeRsp& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SlogGetAppLogSizeRsp& default_instance();
  
  void Swap(SlogGetAppLogSizeRsp* other);
  
  // implements Message ----------------------------------------------
  
  SlogGetAppLogSizeRsp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SlogGetAppLogSizeRsp& from);
  void MergeFrom(const SlogGetAppLogSizeRsp& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 master_user_id = 1;
  inline bool has_master_user_id() const;
  inline void clear_master_user_id();
  static const int kMasterUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 master_user_id() const;
  inline void set_master_user_id(::google::protobuf::uint32 value);
  
  // repeated .top.AppLogSizeInfo app_log_size_info = 2;
  inline int app_log_size_info_size() const;
  inline void clear_app_log_size_info();
  static const int kAppLogSizeInfoFieldNumber = 2;
  inline const ::top::AppLogSizeInfo& app_log_size_info(int index) const;
  inline ::top::AppLogSizeInfo* mutable_app_log_size_info(int index);
  inline ::top::AppLogSizeInfo* add_app_log_size_info();
  inline const ::google::protobuf::RepeatedPtrField< ::top::AppLogSizeInfo >&
      app_log_size_info() const;
  inline ::google::protobuf::RepeatedPtrField< ::top::AppLogSizeInfo >*
      mutable_app_log_size_info();
  
  // optional int32 req_app_count = 3;
  inline bool has_req_app_count() const;
  inline void clear_req_app_count();
  static const int kReqAppCountFieldNumber = 3;
  inline ::google::protobuf::int32 req_app_count() const;
  inline void set_req_app_count(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:top.SlogGetAppLogSizeRsp)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 master_user_id_;
  ::google::protobuf::RepeatedPtrField< ::top::AppLogSizeInfo > app_log_size_info_;
  ::google::protobuf::int32 req_app_count_;
  friend void  protobuf_AddDesc_top_5fproto_2eproto();
  friend void protobuf_AssignDesc_top_5fproto_2eproto();
  friend void protobuf_ShutdownFile_top_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SlogGetAppLogSizeRsp* default_instance_;
};
// -------------------------------------------------------------------

class SlogRemoveAppLogFile : public ::google::protobuf::Message {
 public:
  SlogRemoveAppLogFile();
  virtual ~SlogRemoveAppLogFile();
  
  SlogRemoveAppLogFile(const SlogRemoveAppLogFile& from);
  
  inline SlogRemoveAppLogFile& operator=(const SlogRemoveAppLogFile& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SlogRemoveAppLogFile& default_instance();
  
  void Swap(SlogRemoveAppLogFile* other);
  
  // implements Message ----------------------------------------------
  
  SlogRemoveAppLogFile* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SlogRemoveAppLogFile& from);
  void MergeFrom(const SlogRemoveAppLogFile& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 master_user_id = 1;
  inline bool has_master_user_id() const;
  inline void clear_master_user_id();
  static const int kMasterUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 master_user_id() const;
  inline void set_master_user_id(::google::protobuf::uint32 value);
  
  // optional int32 app_id = 2;
  inline bool has_app_id() const;
  inline void clear_app_id();
  static const int kAppIdFieldNumber = 2;
  inline ::google::protobuf::int32 app_id() const;
  inline void set_app_id(::google::protobuf::int32 value);
  
  // optional uint32 app_log_file_time = 3;
  inline bool has_app_log_file_time() const;
  inline void clear_app_log_file_time();
  static const int kAppLogFileTimeFieldNumber = 3;
  inline ::google::protobuf::uint32 app_log_file_time() const;
  inline void set_app_log_file_time(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:top.SlogRemoveAppLogFile)
 private:
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  mutable int _cached_size_;
  
  ::google::protobuf::uint32 master_user_id_;
  ::google::protobuf::int32 app_id_;
  ::google::protobuf::uint32 app_log_file_time_;
  friend void  protobuf_AddDesc_top_5fproto_2eproto();
  friend void protobuf_AssignDesc_top_5fproto_2eproto();
  friend void protobuf_ShutdownFile_top_5fproto_2eproto();
  
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  // WHY DOES & HAVE LOWER PRECEDENCE THAN != !?
  inline bool _has_bit(int index) const {
    return (_has_bits_[index / 32] & (1u << (index % 32))) != 0;
  }
  inline void _set_bit(int index) {
    _has_bits_[index / 32] |= (1u << (index % 32));
  }
  inline void _clear_bit(int index) {
    _has_bits_[index / 32] &= ~(1u << (index % 32));
  }
  
  void InitAsDefaultInstance();
  static SlogRemoveAppLogFile* default_instance_;
};
// ===================================================================


// ===================================================================

// SlogLogInfo

// required uint32 uint32_app_id = 1;
inline bool SlogLogInfo::has_uint32_app_id() const {
  return _has_bit(0);
}
inline void SlogLogInfo::clear_uint32_app_id() {
  uint32_app_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SlogLogInfo::uint32_app_id() const {
  return uint32_app_id_;
}
inline void SlogLogInfo::set_uint32_app_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  uint32_app_id_ = value;
}

// required uint32 uint32_module_id = 2;
inline bool SlogLogInfo::has_uint32_module_id() const {
  return _has_bit(1);
}
inline void SlogLogInfo::clear_uint32_module_id() {
  uint32_module_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 SlogLogInfo::uint32_module_id() const {
  return uint32_module_id_;
}
inline void SlogLogInfo::set_uint32_module_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  uint32_module_id_ = value;
}

// optional uint64 uint64_log_time = 3;
inline bool SlogLogInfo::has_uint64_log_time() const {
  return _has_bit(2);
}
inline void SlogLogInfo::clear_uint64_log_time() {
  uint64_log_time_ = GOOGLE_ULONGLONG(0);
  _clear_bit(2);
}
inline ::google::protobuf::uint64 SlogLogInfo::uint64_log_time() const {
  return uint64_log_time_;
}
inline void SlogLogInfo::set_uint64_log_time(::google::protobuf::uint64 value) {
  _set_bit(2);
  uint64_log_time_ = value;
}

// optional uint32 uint32_log_seq = 4;
inline bool SlogLogInfo::has_uint32_log_seq() const {
  return _has_bit(3);
}
inline void SlogLogInfo::clear_uint32_log_seq() {
  uint32_log_seq_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 SlogLogInfo::uint32_log_seq() const {
  return uint32_log_seq_;
}
inline void SlogLogInfo::set_uint32_log_seq(::google::protobuf::uint32 value) {
  _set_bit(3);
  uint32_log_seq_ = value;
}

// required uint32 uint32_log_type = 5;
inline bool SlogLogInfo::has_uint32_log_type() const {
  return _has_bit(4);
}
inline void SlogLogInfo::clear_uint32_log_type() {
  uint32_log_type_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 SlogLogInfo::uint32_log_type() const {
  return uint32_log_type_;
}
inline void SlogLogInfo::set_uint32_log_type(::google::protobuf::uint32 value) {
  _set_bit(4);
  uint32_log_type_ = value;
}

// required bytes bytes_log = 6;
inline bool SlogLogInfo::has_bytes_log() const {
  return _has_bit(5);
}
inline void SlogLogInfo::clear_bytes_log() {
  if (bytes_log_ != &_default_bytes_log_) {
    bytes_log_->clear();
  }
  _clear_bit(5);
}
inline const ::std::string& SlogLogInfo::bytes_log() const {
  return *bytes_log_;
}
#ifdef _WEB_LOGIC
inline void SlogLogInfo::set_bytes_log(const ::std::string& value) {
  _set_bit(5);
  if (bytes_log_ == &_default_bytes_log_) {
    bytes_log_ = new ::std::string;
  }
  string sTemp;
  StringUtil::GBK2UTF8(value.c_str(), value.size(), sTemp);
  bytes_log_->assign(sTemp);
}
inline void SlogLogInfo::set_bytes_log(const char* value) {
  _set_bit(5);
  if (bytes_log_ == &_default_bytes_log_) {
    bytes_log_ = new ::std::string;
  }
  string sTemp = value;
  StringUtil::GBK2UTF8(value, sTemp.size(), sTemp);
  bytes_log_->assign(sTemp);
}
inline void SlogLogInfo::set_bytes_log(const void* value, size_t size) {
  _set_bit(5);
  if (bytes_log_ == &_default_bytes_log_) {
    bytes_log_ = new ::std::string;
  }
  string sTemp;
  StringUtil::GBK2UTF8(value, size, sTemp);
  bytes_log_->assign(sTemp);
}
#else
inline void SlogLogInfo::set_bytes_log(const ::std::string& value) {
  _set_bit(5);
  if (bytes_log_ == &_default_bytes_log_) {
    bytes_log_ = new ::std::string;
  }
  bytes_log_->assign(value);
}
inline void SlogLogInfo::set_bytes_log(const char* value) {
  _set_bit(5);
  if (bytes_log_ == &_default_bytes_log_) {
    bytes_log_ = new ::std::string;
  }
  bytes_log_->assign(value);
}
inline void SlogLogInfo::set_bytes_log(const void* value, size_t size) {
  _set_bit(5);
  if (bytes_log_ == &_default_bytes_log_) {
    bytes_log_ = new ::std::string;
  }
  bytes_log_->assign(reinterpret_cast<const char*>(value), size);
}
#endif
inline ::std::string* SlogLogInfo::mutable_bytes_log() {
  _set_bit(5);
  if (bytes_log_ == &_default_bytes_log_) {
    bytes_log_ = new ::std::string;
  }
  return bytes_log_;
}

// optional uint32 uint32_log_config_id = 7;
inline bool SlogLogInfo::has_uint32_log_config_id() const {
  return _has_bit(6);
}
inline void SlogLogInfo::clear_uint32_log_config_id() {
  uint32_log_config_id_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 SlogLogInfo::uint32_log_config_id() const {
  return uint32_log_config_id_;
}
inline void SlogLogInfo::set_uint32_log_config_id(::google::protobuf::uint32 value) {
  _set_bit(6);
  uint32_log_config_id_ = value;
}

// optional uint32 uint32_log_host = 8;
inline bool SlogLogInfo::has_uint32_log_host() const {
  return _has_bit(7);
}
inline void SlogLogInfo::clear_uint32_log_host() {
  uint32_log_host_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 SlogLogInfo::uint32_log_host() const {
  return uint32_log_host_;
}
inline void SlogLogInfo::set_uint32_log_host(::google::protobuf::uint32 value) {
  _set_bit(7);
  uint32_log_host_ = value;
}

// optional uint32 uint32_cust_1 = 9;
inline bool SlogLogInfo::has_uint32_cust_1() const {
  return _has_bit(8);
}
inline void SlogLogInfo::clear_uint32_cust_1() {
  uint32_cust_1_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 SlogLogInfo::uint32_cust_1() const {
  return uint32_cust_1_;
}
inline void SlogLogInfo::set_uint32_cust_1(::google::protobuf::uint32 value) {
  _set_bit(8);
  uint32_cust_1_ = value;
}

// optional uint32 uint32_cust_2 = 10;
inline bool SlogLogInfo::has_uint32_cust_2() const {
  return _has_bit(9);
}
inline void SlogLogInfo::clear_uint32_cust_2() {
  uint32_cust_2_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 SlogLogInfo::uint32_cust_2() const {
  return uint32_cust_2_;
}
inline void SlogLogInfo::set_uint32_cust_2(::google::protobuf::uint32 value) {
  _set_bit(9);
  uint32_cust_2_ = value;
}

// optional int32 int32_cust_3 = 11;
inline bool SlogLogInfo::has_int32_cust_3() const {
  return _has_bit(10);
}
inline void SlogLogInfo::clear_int32_cust_3() {
  int32_cust_3_ = 0;
  _clear_bit(10);
}
inline ::google::protobuf::int32 SlogLogInfo::int32_cust_3() const {
  return int32_cust_3_;
}
inline void SlogLogInfo::set_int32_cust_3(::google::protobuf::int32 value) {
  _set_bit(10);
  int32_cust_3_ = value;
}

// optional int32 int32_cust_4 = 12;
inline bool SlogLogInfo::has_int32_cust_4() const {
  return _has_bit(11);
}
inline void SlogLogInfo::clear_int32_cust_4() {
  int32_cust_4_ = 0;
  _clear_bit(11);
}
inline ::google::protobuf::int32 SlogLogInfo::int32_cust_4() const {
  return int32_cust_4_;
}
inline void SlogLogInfo::set_int32_cust_4(::google::protobuf::int32 value) {
  _set_bit(11);
  int32_cust_4_ = value;
}

// optional bytes bytes_cust_5 = 13;
inline bool SlogLogInfo::has_bytes_cust_5() const {
  return _has_bit(12);
}
inline void SlogLogInfo::clear_bytes_cust_5() {
  if (bytes_cust_5_ != &_default_bytes_cust_5_) {
    bytes_cust_5_->clear();
  }
  _clear_bit(12);
}
inline const ::std::string& SlogLogInfo::bytes_cust_5() const {
  return *bytes_cust_5_;
}
#ifdef _WEB_LOGIC
inline void SlogLogInfo::set_bytes_cust_5(const ::std::string& value) {
  _set_bit(12);
  if (bytes_cust_5_ == &_default_bytes_cust_5_) {
    bytes_cust_5_ = new ::std::string;
  }
  string sTemp;
  StringUtil::GBK2UTF8(value.c_str(), value.size(), sTemp);
  bytes_cust_5_->assign(sTemp);
}
inline void SlogLogInfo::set_bytes_cust_5(const char* value) {
  _set_bit(12);
  if (bytes_cust_5_ == &_default_bytes_cust_5_) {
    bytes_cust_5_ = new ::std::string;
  }
  string sTemp = value;
  StringUtil::GBK2UTF8(value, sTemp.size(), sTemp);
  bytes_cust_5_->assign(sTemp);
}
inline void SlogLogInfo::set_bytes_cust_5(const void* value, size_t size) {
  _set_bit(12);
  if (bytes_cust_5_ == &_default_bytes_cust_5_) {
    bytes_cust_5_ = new ::std::string;
  }
  string sTemp;
  StringUtil::GBK2UTF8(value, size, sTemp);
  bytes_cust_5_->assign(sTemp);
}
#else
inline void SlogLogInfo::set_bytes_cust_5(const ::std::string& value) {
  _set_bit(12);
  if (bytes_cust_5_ == &_default_bytes_cust_5_) {
    bytes_cust_5_ = new ::std::string;
  }
  bytes_cust_5_->assign(value);
}
inline void SlogLogInfo::set_bytes_cust_5(const char* value) {
  _set_bit(12);
  if (bytes_cust_5_ == &_default_bytes_cust_5_) {
    bytes_cust_5_ = new ::std::string;
  }
  bytes_cust_5_->assign(value);
}
inline void SlogLogInfo::set_bytes_cust_5(const void* value, size_t size) {
  _set_bit(12);
  if (bytes_cust_5_ == &_default_bytes_cust_5_) {
    bytes_cust_5_ = new ::std::string;
  }
  bytes_cust_5_->assign(reinterpret_cast<const char*>(value), size);
}
#endif
inline ::std::string* SlogLogInfo::mutable_bytes_cust_5() {
  _set_bit(12);
  if (bytes_cust_5_ == &_default_bytes_cust_5_) {
    bytes_cust_5_ = new ::std::string;
  }
  return bytes_cust_5_;
}

// optional bytes bytes_cust_6 = 14;
inline bool SlogLogInfo::has_bytes_cust_6() const {
  return _has_bit(13);
}
inline void SlogLogInfo::clear_bytes_cust_6() {
  if (bytes_cust_6_ != &_default_bytes_cust_6_) {
    bytes_cust_6_->clear();
  }
  _clear_bit(13);
}
inline const ::std::string& SlogLogInfo::bytes_cust_6() const {
  return *bytes_cust_6_;
}
#ifdef _WEB_LOGIC
inline void SlogLogInfo::set_bytes_cust_6(const ::std::string& value) {
  _set_bit(13);
  if (bytes_cust_6_ == &_default_bytes_cust_6_) {
    bytes_cust_6_ = new ::std::string;
  }
  string sTemp;
  StringUtil::GBK2UTF8(value.c_str(), value.size(), sTemp);
  bytes_cust_6_->assign(sTemp);
}
inline void SlogLogInfo::set_bytes_cust_6(const char* value) {
  _set_bit(13);
  if (bytes_cust_6_ == &_default_bytes_cust_6_) {
    bytes_cust_6_ = new ::std::string;
  }
  string sTemp = value;
  StringUtil::GBK2UTF8(value, sTemp.size(), sTemp);
  bytes_cust_6_->assign(sTemp);
}
inline void SlogLogInfo::set_bytes_cust_6(const void* value, size_t size) {
  _set_bit(13);
  if (bytes_cust_6_ == &_default_bytes_cust_6_) {
    bytes_cust_6_ = new ::std::string;
  }
  string sTemp;
  StringUtil::GBK2UTF8(value, size, sTemp);
  bytes_cust_6_->assign(sTemp);
}
#else
inline void SlogLogInfo::set_bytes_cust_6(const ::std::string& value) {
  _set_bit(13);
  if (bytes_cust_6_ == &_default_bytes_cust_6_) {
    bytes_cust_6_ = new ::std::string;
  }
  bytes_cust_6_->assign(value);
}
inline void SlogLogInfo::set_bytes_cust_6(const char* value) {
  _set_bit(13);
  if (bytes_cust_6_ == &_default_bytes_cust_6_) {
    bytes_cust_6_ = new ::std::string;
  }
  bytes_cust_6_->assign(value);
}
inline void SlogLogInfo::set_bytes_cust_6(const void* value, size_t size) {
  _set_bit(13);
  if (bytes_cust_6_ == &_default_bytes_cust_6_) {
    bytes_cust_6_ = new ::std::string;
  }
  bytes_cust_6_->assign(reinterpret_cast<const char*>(value), size);
}
#endif
inline ::std::string* SlogLogInfo::mutable_bytes_cust_6() {
  _set_bit(13);
  if (bytes_cust_6_ == &_default_bytes_cust_6_) {
    bytes_cust_6_ = new ::std::string;
  }
  return bytes_cust_6_;
}

// optional uint32 cust_flag = 15;
inline bool SlogLogInfo::has_cust_flag() const {
  return _has_bit(14);
}
inline void SlogLogInfo::clear_cust_flag() {
  cust_flag_ = 0u;
  _clear_bit(14);
}
inline ::google::protobuf::uint32 SlogLogInfo::cust_flag() const {
  return cust_flag_;
}
inline void SlogLogInfo::set_cust_flag(::google::protobuf::uint32 value) {
  _set_bit(14);
  cust_flag_ = value;
}

// -------------------------------------------------------------------

// SlogClientPkgBody

// repeated .top.SlogLogInfo log = 1;
inline int SlogClientPkgBody::log_size() const {
  return log_.size();
}
inline void SlogClientPkgBody::clear_log() {
  log_.Clear();
}
inline const ::top::SlogLogInfo& SlogClientPkgBody::log(int index) const {
  return log_.Get(index);
}
inline ::top::SlogLogInfo* SlogClientPkgBody::mutable_log(int index) {
  return log_.Mutable(index);
}
inline ::top::SlogLogInfo* SlogClientPkgBody::add_log() {
  return log_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::top::SlogLogInfo >&
SlogClientPkgBody::log() const {
  return log_;
}
inline ::google::protobuf::RepeatedPtrField< ::top::SlogLogInfo >*
SlogClientPkgBody::mutable_log() {
  return &log_;
}

// optional uint32 uint32_app_id = 2;
inline bool SlogClientPkgBody::has_uint32_app_id() const {
  return _has_bit(1);
}
inline void SlogClientPkgBody::clear_uint32_app_id() {
  uint32_app_id_ = 0u;
  _clear_bit(1);
}
inline ::google::protobuf::uint32 SlogClientPkgBody::uint32_app_id() const {
  return uint32_app_id_;
}
inline void SlogClientPkgBody::set_uint32_app_id(::google::protobuf::uint32 value) {
  _set_bit(1);
  uint32_app_id_ = value;
}

// -------------------------------------------------------------------

// SlogGetAppLogSizeReq

// repeated int32 appid_list = 2;
inline int SlogGetAppLogSizeReq::appid_list_size() const {
  return appid_list_.size();
}
inline void SlogGetAppLogSizeReq::clear_appid_list() {
  appid_list_.Clear();
}
inline ::google::protobuf::int32 SlogGetAppLogSizeReq::appid_list(int index) const {
  return appid_list_.Get(index);
}
inline void SlogGetAppLogSizeReq::set_appid_list(int index, ::google::protobuf::int32 value) {
  appid_list_.Set(index, value);
}
inline void SlogGetAppLogSizeReq::add_appid_list(::google::protobuf::int32 value) {
  appid_list_.Add(value);
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
SlogGetAppLogSizeReq::appid_list() const {
  return appid_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
SlogGetAppLogSizeReq::mutable_appid_list() {
  return &appid_list_;
}

// -------------------------------------------------------------------

// AppLogSizeInfo

// optional int32 appid = 1;
inline bool AppLogSizeInfo::has_appid() const {
  return _has_bit(0);
}
inline void AppLogSizeInfo::clear_appid() {
  appid_ = 0;
  _clear_bit(0);
}
inline ::google::protobuf::int32 AppLogSizeInfo::appid() const {
  return appid_;
}
inline void AppLogSizeInfo::set_appid(::google::protobuf::int32 value) {
  _set_bit(0);
  appid_ = value;
}

// optional uint64 log_size = 2;
inline bool AppLogSizeInfo::has_log_size() const {
  return _has_bit(1);
}
inline void AppLogSizeInfo::clear_log_size() {
  log_size_ = GOOGLE_ULONGLONG(0);
  _clear_bit(1);
}
inline ::google::protobuf::uint64 AppLogSizeInfo::log_size() const {
  return log_size_;
}
inline void AppLogSizeInfo::set_log_size(::google::protobuf::uint64 value) {
  _set_bit(1);
  log_size_ = value;
}

// optional uint32 oldest_log_file_time = 3;
inline bool AppLogSizeInfo::has_oldest_log_file_time() const {
  return _has_bit(2);
}
inline void AppLogSizeInfo::clear_oldest_log_file_time() {
  oldest_log_file_time_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 AppLogSizeInfo::oldest_log_file_time() const {
  return oldest_log_file_time_;
}
inline void AppLogSizeInfo::set_oldest_log_file_time(::google::protobuf::uint32 value) {
  _set_bit(2);
  oldest_log_file_time_ = value;
}

// optional uint32 debug_logs_count = 4;
inline bool AppLogSizeInfo::has_debug_logs_count() const {
  return _has_bit(3);
}
inline void AppLogSizeInfo::clear_debug_logs_count() {
  debug_logs_count_ = 0u;
  _clear_bit(3);
}
inline ::google::protobuf::uint32 AppLogSizeInfo::debug_logs_count() const {
  return debug_logs_count_;
}
inline void AppLogSizeInfo::set_debug_logs_count(::google::protobuf::uint32 value) {
  _set_bit(3);
  debug_logs_count_ = value;
}

// optional uint32 info_logs_count = 5;
inline bool AppLogSizeInfo::has_info_logs_count() const {
  return _has_bit(4);
}
inline void AppLogSizeInfo::clear_info_logs_count() {
  info_logs_count_ = 0u;
  _clear_bit(4);
}
inline ::google::protobuf::uint32 AppLogSizeInfo::info_logs_count() const {
  return info_logs_count_;
}
inline void AppLogSizeInfo::set_info_logs_count(::google::protobuf::uint32 value) {
  _set_bit(4);
  info_logs_count_ = value;
}

// optional uint32 warn_logs_count = 6;
inline bool AppLogSizeInfo::has_warn_logs_count() const {
  return _has_bit(5);
}
inline void AppLogSizeInfo::clear_warn_logs_count() {
  warn_logs_count_ = 0u;
  _clear_bit(5);
}
inline ::google::protobuf::uint32 AppLogSizeInfo::warn_logs_count() const {
  return warn_logs_count_;
}
inline void AppLogSizeInfo::set_warn_logs_count(::google::protobuf::uint32 value) {
  _set_bit(5);
  warn_logs_count_ = value;
}

// optional uint32 reqerr_logs_count = 7;
inline bool AppLogSizeInfo::has_reqerr_logs_count() const {
  return _has_bit(6);
}
inline void AppLogSizeInfo::clear_reqerr_logs_count() {
  reqerr_logs_count_ = 0u;
  _clear_bit(6);
}
inline ::google::protobuf::uint32 AppLogSizeInfo::reqerr_logs_count() const {
  return reqerr_logs_count_;
}
inline void AppLogSizeInfo::set_reqerr_logs_count(::google::protobuf::uint32 value) {
  _set_bit(6);
  reqerr_logs_count_ = value;
}

// optional uint32 error_logs_count = 8;
inline bool AppLogSizeInfo::has_error_logs_count() const {
  return _has_bit(7);
}
inline void AppLogSizeInfo::clear_error_logs_count() {
  error_logs_count_ = 0u;
  _clear_bit(7);
}
inline ::google::protobuf::uint32 AppLogSizeInfo::error_logs_count() const {
  return error_logs_count_;
}
inline void AppLogSizeInfo::set_error_logs_count(::google::protobuf::uint32 value) {
  _set_bit(7);
  error_logs_count_ = value;
}

// optional uint32 fatal_logs_count = 9;
inline bool AppLogSizeInfo::has_fatal_logs_count() const {
  return _has_bit(8);
}
inline void AppLogSizeInfo::clear_fatal_logs_count() {
  fatal_logs_count_ = 0u;
  _clear_bit(8);
}
inline ::google::protobuf::uint32 AppLogSizeInfo::fatal_logs_count() const {
  return fatal_logs_count_;
}
inline void AppLogSizeInfo::set_fatal_logs_count(::google::protobuf::uint32 value) {
  _set_bit(8);
  fatal_logs_count_ = value;
}

// optional uint32 other_logs_count = 10;
inline bool AppLogSizeInfo::has_other_logs_count() const {
  return _has_bit(9);
}
inline void AppLogSizeInfo::clear_other_logs_count() {
  other_logs_count_ = 0u;
  _clear_bit(9);
}
inline ::google::protobuf::uint32 AppLogSizeInfo::other_logs_count() const {
  return other_logs_count_;
}
inline void AppLogSizeInfo::set_other_logs_count(::google::protobuf::uint32 value) {
  _set_bit(9);
  other_logs_count_ = value;
}

// -------------------------------------------------------------------

// SlogGetAppLogSizeRsp

// optional uint32 master_user_id = 1;
inline bool SlogGetAppLogSizeRsp::has_master_user_id() const {
  return _has_bit(0);
}
inline void SlogGetAppLogSizeRsp::clear_master_user_id() {
  master_user_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SlogGetAppLogSizeRsp::master_user_id() const {
  return master_user_id_;
}
inline void SlogGetAppLogSizeRsp::set_master_user_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  master_user_id_ = value;
}

// repeated .top.AppLogSizeInfo app_log_size_info = 2;
inline int SlogGetAppLogSizeRsp::app_log_size_info_size() const {
  return app_log_size_info_.size();
}
inline void SlogGetAppLogSizeRsp::clear_app_log_size_info() {
  app_log_size_info_.Clear();
}
inline const ::top::AppLogSizeInfo& SlogGetAppLogSizeRsp::app_log_size_info(int index) const {
  return app_log_size_info_.Get(index);
}
inline ::top::AppLogSizeInfo* SlogGetAppLogSizeRsp::mutable_app_log_size_info(int index) {
  return app_log_size_info_.Mutable(index);
}
inline ::top::AppLogSizeInfo* SlogGetAppLogSizeRsp::add_app_log_size_info() {
  return app_log_size_info_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::top::AppLogSizeInfo >&
SlogGetAppLogSizeRsp::app_log_size_info() const {
  return app_log_size_info_;
}
inline ::google::protobuf::RepeatedPtrField< ::top::AppLogSizeInfo >*
SlogGetAppLogSizeRsp::mutable_app_log_size_info() {
  return &app_log_size_info_;
}

// optional int32 req_app_count = 3;
inline bool SlogGetAppLogSizeRsp::has_req_app_count() const {
  return _has_bit(2);
}
inline void SlogGetAppLogSizeRsp::clear_req_app_count() {
  req_app_count_ = 0;
  _clear_bit(2);
}
inline ::google::protobuf::int32 SlogGetAppLogSizeRsp::req_app_count() const {
  return req_app_count_;
}
inline void SlogGetAppLogSizeRsp::set_req_app_count(::google::protobuf::int32 value) {
  _set_bit(2);
  req_app_count_ = value;
}

// -------------------------------------------------------------------

// SlogRemoveAppLogFile

// optional uint32 master_user_id = 1;
inline bool SlogRemoveAppLogFile::has_master_user_id() const {
  return _has_bit(0);
}
inline void SlogRemoveAppLogFile::clear_master_user_id() {
  master_user_id_ = 0u;
  _clear_bit(0);
}
inline ::google::protobuf::uint32 SlogRemoveAppLogFile::master_user_id() const {
  return master_user_id_;
}
inline void SlogRemoveAppLogFile::set_master_user_id(::google::protobuf::uint32 value) {
  _set_bit(0);
  master_user_id_ = value;
}

// optional int32 app_id = 2;
inline bool SlogRemoveAppLogFile::has_app_id() const {
  return _has_bit(1);
}
inline void SlogRemoveAppLogFile::clear_app_id() {
  app_id_ = 0;
  _clear_bit(1);
}
inline ::google::protobuf::int32 SlogRemoveAppLogFile::app_id() const {
  return app_id_;
}
inline void SlogRemoveAppLogFile::set_app_id(::google::protobuf::int32 value) {
  _set_bit(1);
  app_id_ = value;
}

// optional uint32 app_log_file_time = 3;
inline bool SlogRemoveAppLogFile::has_app_log_file_time() const {
  return _has_bit(2);
}
inline void SlogRemoveAppLogFile::clear_app_log_file_time() {
  app_log_file_time_ = 0u;
  _clear_bit(2);
}
inline ::google::protobuf::uint32 SlogRemoveAppLogFile::app_log_file_time() const {
  return app_log_file_time_;
}
inline void SlogRemoveAppLogFile::set_app_log_file_time(::google::protobuf::uint32 value) {
  _set_bit(2);
  app_log_file_time_ = value;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace top

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_top_5fproto_2eproto__INCLUDED
